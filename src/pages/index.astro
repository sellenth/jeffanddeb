---
const gallery = [
  {
    src: '/images/wedding/IMG_0976.webp',
    alt: 'Jeff and Deb wedding photo 2'
  },
  {
    src: '/images/wedding/IMG_0978.webp',
    alt: 'Jeff and Deb wedding photo 4'
  },
  {
    src: '/images/wedding/IMG_0980.webp',
    alt: 'Jeff and Deb wedding photo 6'
  },
  {
    src: '/images/wedding/IMG_4646.webp',
    alt: 'Jeff and Deb wedding photo 8'
  },
  {
    src: '/images/wedding/IMG_4651.webp',
    alt: 'Jeff and Deb wedding photo 10'
  },
  {
    src: '/images/wedding/1.webp',
    alt: 'Jeff and Deb wedding photo 10'
  },
  {
    src: '/images/wedding/2.webp',
    alt: 'Jeff and Deb wedding photo 10'
  },
  {
    src: '/images/wedding/3.webp',
    alt: 'Jeff and Deb wedding photo 10'
  },
  {
    src: '/images/wedding/4.webp',
    alt: 'Jeff and Deb wedding photo 10'
  },
  {
    src: '/images/wedding/5.webp',
    alt: 'Jeff and Deb wedding photo 10'
  },
  {
    src: '/images/wedding/6.webp',
    alt: 'Jeff and Deb wedding photo 10'
  },
  {
    src: '/images/wedding/7.webp',
    alt: 'Jeff and Deb wedding photo 10'
  },
  {
    src: '/images/wedding/8.webp',
    alt: 'Jeff and Deb wedding photo 10'
  },
];

const timeline = [
  {
    headline: 'Just Married',
    detail: 'Yesterday – June 2024',
    blurb:
      "We said our vows surrounded by family, friends, and the songs that brought us together."
  },
];
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg?v=2" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="Jeff & Deb just got married! Follow along as they celebrate love and craft their next chapter in music." />
    <meta name="generator" content={Astro.generator} />
    <title>Jeff & Deb — Newlywed Harmony</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&family=Playfair+Display:wght@600;700&display=swap" rel="stylesheet" />
    <style>
      :root {
        color-scheme: light;
        font-family: 'Montserrat', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
        --bg-gradient: radial-gradient(circle at top left, #fff4f7, #f4f8ff 45%, #f9f6ff);
        --accent: #6a5cf6;
        --accent-soft: rgba(106, 92, 246, 0.08);
        --text-primary: #1f1a36;
        --text-secondary: #544f6a;
        --border-soft: rgba(106, 92, 246, 0.12);
        --card-bg: rgba(255, 255, 255, 0.75);
        --shadow-soft: 0 20px 45px rgba(34, 30, 84, 0.08);
        background: var(--bg-gradient);
        color: var(--text-primary);
      }

      * {
        box-sizing: border-box;
      }

      body {
        margin: 0;
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        background: var(--bg-gradient);
      }

      .sr-only {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border: 0;
      }

      .hero {
        position: relative;
        padding: clamp(3rem, 5vw, 6rem) clamp(1.5rem, 8vw, 7rem) clamp(3rem, 6vw, 5rem);
        overflow: hidden;
        border-bottom: 1px solid var(--border-soft);
      }

      .hero::before {
        content: '';
        position: absolute;
        inset: 1rem;
        border-radius: 36px;
        background: linear-gradient(140deg, rgba(255, 193, 218, 0.45), rgba(114, 234, 255, 0.35));
        filter: blur(70px);
        z-index: 0;
      }

      .hero-content {
        position: relative;
        z-index: 1;
        max-width: 960px;
        margin: 0 auto;
        display: grid;
        gap: clamp(2rem, 4vw, 4rem);
      }

      .brand {
        display: inline-flex;
        align-items: center;
        gap: 1rem;
        padding: 0.75rem 1.25rem;
        background: rgba(255, 255, 255, 0.6);
        border-radius: 999px;
        border: 1px solid var(--border-soft);
        max-width: fit-content;
        backdrop-filter: blur(12px);
      }

      .brand img {
        height: 48px;
        width: auto;
        object-fit: contain;
      }

      .brand span {
        text-transform: uppercase;
        letter-spacing: 0.2em;
        font-size: 0.85rem;
        font-weight: 600;
        color: var(--text-secondary);
      }

      .hero h1 {
        font-family: 'Playfair Display', 'Times New Roman', serif;
        font-size: clamp(2.5rem, 5vw, 4.5rem);
        margin: 0;
        line-height: 1.05;
      }

      .hero p {
        margin: 1.5rem 0 2rem;
        font-size: clamp(1rem, 2.2vw, 1.25rem);
        max-width: 48ch;
        line-height: 1.6;
        color: var(--text-secondary);
      }

      .cta-row {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
      }

      .cta {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 0.85rem 1.75rem;
        border-radius: 999px;
        font-weight: 600;
        font-size: 0.95rem;
        text-decoration: none;
        transition: transform 150ms ease, box-shadow 150ms ease;
        border: 1px solid transparent;
      }

      .cta.primary {
        background: var(--accent);
        color: #fff;
        box-shadow: var(--shadow-soft);
      }

      .cta.secondary {
        background: rgba(255, 255, 255, 0.7);
        color: var(--accent);
        border-color: var(--border-soft);
      }

      .cta:hover {
        transform: translateY(-2px);
      }

      main {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: clamp(3rem, 5vw, 5rem);
        padding: clamp(2.5rem, 6vw, 6rem) clamp(1.5rem, 8vw, 7rem) clamp(4rem, 8vw, 8rem);
      }

      section {
        display: grid;
        gap: clamp(1.5rem, 3vw, 2.5rem);
      }

      .pill-title {
        text-transform: uppercase;
        letter-spacing: 0.18em;
        font-size: 0.8rem;
        font-weight: 600;
        color: var(--accent);
      }

      .section-heading {
        font-family: 'Playfair Display', 'Times New Roman', serif;
        font-size: clamp(2rem, 3.8vw, 3rem);
        margin: 0;
      }

      .section-copy {
        margin: 0;
        font-size: clamp(1rem, 1.8vw, 1.2rem);
        color: var(--text-secondary);
        line-height: 1.7;
      }

      .cards {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 1.5rem;
      }

      .card {
        padding: 1.75rem;
        border-radius: 24px;
        background: var(--card-bg);
        border: 1px solid var(--border-soft);
        box-shadow: var(--shadow-soft);
        backdrop-filter: blur(10px);
        display: grid;
        gap: 0.65rem;
      }

      .card h3 {
        margin: 0;
        font-size: 1.25rem;
      }

      .card span {
        font-size: 0.85rem;
        letter-spacing: 0.12em;
        text-transform: uppercase;
        color: var(--accent);
      }

      .card p {
        margin: 0;
        color: var(--text-secondary);
        line-height: 1.5;
      }

       .gallery {
         display: flex;
         flex-wrap: wrap;
         justify-content: center;
         gap: 1.5rem;
       }

       .gallery figure {
         flex: 0 0 240px;
       }

      .gallery figure {
        margin: 0;
        border-radius: 28px;
        overflow: hidden;
        position: relative;
        box-shadow: var(--shadow-soft);
        border: 1px solid var(--border-soft);
        background: rgba(255, 255, 255, 0.8);
      }

      .gallery img {
        width: 100%;
        height: 100%;
        display: block;
        object-fit: cover;
      }

      .gallery figcaption {
        position: absolute;
        inset: auto 1rem 1rem 1rem;
        padding: 0.65rem 0.85rem;
        border-radius: 999px;
        background: rgba(31, 26, 54, 0.65);
        color: #fff;
        font-size: 0.8rem;
        letter-spacing: 0.08em;
        text-transform: uppercase;
      }

      #gallery {
        padding: clamp(2rem, 4vw, 4rem) clamp(1.5rem, 8vw, 7rem);
      }

      .lightbox {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
      }

      .lightbox.hidden {
        display: none;
      }

      .close-btn {
        position: absolute;
        top: 20px;
        right: 20px;
        background: none;
        border: none;
        color: white;
        font-size: 2rem;
        cursor: pointer;
      }

      .nav-btn {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: rgba(255, 255, 255, 0.2);
        border: none;
        color: white;
        font-size: 2rem;
        padding: 1rem;
        cursor: pointer;
        border-radius: 50%;
      }

      .prev {
        left: 20px;
      }

      .next {
        right: 20px;
      }

      #lightbox-img {
        max-width: 90%;
        max-height: 90%;
        object-fit: contain;
      }

       .preview-music {
         display: grid;
         gap: 1.5rem;
         justify-items: center;
       }

       .preview-music > div:first-child {
         text-align: center;
       }

       .track-selector {
         display: flex;
         gap: 0.75rem;
         flex-wrap: wrap;
       }

       .track-btn {
         padding: 0.5rem 1rem;
         border-radius: 999px;
         border: 1px solid var(--border-soft);
         background: rgba(255, 255, 255, 0.7);
         color: var(--accent);
         font-size: 0.9rem;
         font-weight: 500;
         cursor: pointer;
         transition: all 150ms ease;
       }

       .track-btn:hover {
         background: var(--accent);
         color: #fff;
         transform: translateY(-1px);
       }

       .track-btn.active {
         background: var(--accent);
         color: #fff;
         box-shadow: var(--shadow-soft);
       }

       .download-btn {
         display: inline-block;
         padding: 0.75rem 1.5rem;
         border-radius: 999px;
         border: 1px solid var(--accent);
         background: var(--accent);
         color: #fff;
         font-size: 0.9rem;
         font-weight: 600;
         text-decoration: none;
         box-shadow: var(--shadow-soft);
         transition: all 150ms ease;
         text-align: center;
       }

       .download-btn:hover {
         background: rgba(106, 92, 246, 0.9);
         transform: translateY(-2px);
       }

       .preview-music audio {
         border-radius: 24px;
         background: rgba(255, 255, 255, 0.78);
         border: 1px solid var(--border-soft);
         box-shadow: var(--shadow-soft);
         padding: 0.5rem;
       }

       .newsletter {
         background: rgba(255, 255, 255, 0.78);
         border-radius: 32px;
         padding: clamp(2rem, 4vw, 3rem);
         box-shadow: var(--shadow-soft);
         border: 1px solid var(--border-soft);
         display: grid;
         gap: 1.5rem;
         justify-items: start;
       }

      .newsletter form {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        width: 100%;
      }

      .newsletter input[type='email'] {
        flex: 1 1 220px;
        min-width: 180px;
        padding: 0.9rem 1.15rem;
        border-radius: 999px;
        border: 1px solid var(--border-soft);
        font-size: 0.95rem;
        background: rgba(255, 255, 255, 0.9);
      }

      .newsletter button {
        padding: 0.9rem 1.75rem;
        border-radius: 999px;
        border: none;
        background: var(--accent);
        color: #fff;
        font-weight: 600;
        font-size: 0.95rem;
        cursor: pointer;
        box-shadow: var(--shadow-soft);
        transition: transform 150ms ease;
      }

      .newsletter button:hover {
        transform: translateY(-1px);
      }

      footer {
        padding: 2rem clamp(1.5rem, 8vw, 7rem) 3rem;
        border-top: 1px solid var(--border-soft);
        color: var(--text-secondary);
        font-size: 0.9rem;
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        justify-content: space-between;
        align-items: center;
      }

      footer a {
        color: inherit;
        text-decoration: none;
        font-weight: 600;
      }

      @media (max-width: 720px) {
        .brand {
          padding: 0.65rem 1rem;
        }

        .brand img {
          height: 40px;
        }

        .cta-row {
          flex-direction: column;
          align-items: stretch;
        }

        .cta {
          justify-content: center;
          width: 100%;
        }

        footer {
          flex-direction: column;
          align-items: flex-start;
        }
      }
    </style>
  </head>
  <body>
    <header class="hero">
      <div class="hero-content">
        <div>
          <h1>Jeff & Deb are married — and the encore is just beginning.</h1>
        </div>
      </div>
    </header>

    <section id="gallery">
      <h2 class="section-heading" style="text-align: center;">Moments from the aisle.</h2>
      <div class="gallery">
          {gallery.map((image, index) => (
            <figure data-index={index}>
              <img src={image.src} alt={image.alt} loading="lazy" />
            </figure>
          ))}
      </div>
    </section>

     <main>
        <section class="preview-music" aria-labelledby="preview-heading">
          <div>
            <span class="pill-title">Preview</span>
            <h2 class="section-heading" id="preview-heading">Our Music</h2>
            <p class="section-copy">
              Listen to a sneak peek of our upcoming tracks.
            </p>
          </div>
          <div class="track-selector">
            <button class="track-btn active" data-track="1">Track 1</button>
            <button class="track-btn" data-track="2">Track 2</button>
            <button class="track-btn" data-track="3">Track 3</button>
          </div>
          <audio id="preview-audio" controls style="width: 100%; max-width: 400px;">
            <source id="audio-source" src="/music/example.mp3" type="audio/mpeg">
            Your browser does not support the audio element.
          </audio>
          <a id="download-btn" href="/music/example.mp3" download class="download-btn">Download Track</a>
        </section>

       <section class="newsletter" aria-labelledby="newsletter-heading">
        <div>
          <span class="pill-title">Stay in the loop</span>
          <h2 class="section-heading" id="newsletter-heading">Hear the first notes.</h2>
          <p class="section-copy">
            Drop your email below and we&rsquo;ll send a personal note when the first demos hit the airwaves. No spam, just songs and stories from Jeff & Deb.
          </p>
        </div>
        <form action="https://api.web3forms.com/submit" method="post">
          <input type="hidden" name="access_key" value="YOUR_ACCESS_KEY_HERE" />
          <input type="hidden" name="subject" value="New subscriber for Jeff & Deb updates" />
          <input type="hidden" name="from_name" value="Jeff & Deb Website" />
          <label class="sr-only" for="email">Email</label>
          <input id="email" name="email" type="email" placeholder="you@example.com" required />
          <button type="submit">Notify me</button>
        </form>
        <small class="section-copy" style="font-size: 0.8rem;">
          We&rsquo;ll only use your email for updates about Jeff & Deb&rsquo;s music. You can unsubscribe anytime.
        </small>
      </section>
    </main>

    <footer>
      <span>&copy; {new Date().getFullYear()} Jeff & Deb. Love first, music next.</span>
    </footer>

    <div id="lightbox" class="lightbox hidden">
      <button id="close-lightbox" class="close-btn">&times;</button>
      <button id="prev-lightbox" class="nav-btn prev">&larr;</button>
      <img id="lightbox-img" alt="" />
      <button id="next-lightbox" class="nav-btn next">&rarr;</button>
    </div>

    <script>
      const galleryFigures = document.querySelectorAll('.gallery figure');
      const lightbox = document.getElementById('lightbox');
      const lightboxImg = document.getElementById('lightbox-img');
      const closeBtn = document.getElementById('close-lightbox');
      const prevBtn = document.getElementById('prev-lightbox');
      const nextBtn = document.getElementById('next-lightbox');

      let currentIndex = 0;

      galleryFigures.forEach((fig, index) => {
        fig.addEventListener('click', () => {
          currentIndex = index;
          showImage();
        });
      });

      function showImage() {
        const img = galleryFigures[currentIndex].querySelector('img');
        lightboxImg.src = img.src;
        lightboxImg.alt = img.alt;
        lightbox.classList.remove('hidden');
      }

      closeBtn.addEventListener('click', () => {
        lightbox.classList.add('hidden');
      });

      prevBtn.addEventListener('click', () => {
        currentIndex = (currentIndex - 1 + galleryFigures.length) % galleryFigures.length;
        showImage();
      });

      nextBtn.addEventListener('click', () => {
        currentIndex = (currentIndex + 1) % galleryFigures.length;
        showImage();
      });

      lightbox.addEventListener('click', (e) => {
        if (e.target === lightbox) {
          lightbox.classList.add('hidden');
        }
      });

       document.addEventListener('keydown', (e) => {
         if (!lightbox.classList.contains('hidden')) {
           if (e.key === 'Escape') {
             lightbox.classList.add('hidden');
           } else if (e.key === 'ArrowLeft') {
             prevBtn.click();
           } else if (e.key === 'ArrowRight') {
             nextBtn.click();
           }
         }
       });

        // Track selector functionality
        const trackButtons = document.querySelectorAll('.track-btn');
        const audioElement = document.getElementById('preview-audio');
        const audioSource = document.getElementById('audio-source');
        const downloadBtn = document.getElementById('download-btn');

        // Load the default track on page load
        audioElement.load();

        trackButtons.forEach(button => {
         button.addEventListener('click', () => {
           // Remove active class from all buttons
           trackButtons.forEach(btn => btn.classList.remove('active'));
           // Add active class to clicked button
           button.classList.add('active');

           // Change audio source and download link
           const trackNumber = button.dataset.track;
           //const trackPath = `/music/track${trackNumber}.mp3`;
           const trackPath = `/music/example.mp3`;
           audioSource.src = trackPath;
           downloadBtn.href = trackPath;
           audioElement.load();
         });
       });
     </script>
  </body>
</html>
